# Generated by Django 5.1 on 2024-08-28 03:30

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Mascota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
                ('edad', models.IntegerField()),
                ('fecha_nacimiento', models.DateField()),
                ('carnet_vacunacion', models.BooleanField(default=False)),
                ('tipo', models.CharField(choices=[('perro', 'Perro'), ('gato', 'Gato'), ('caballo', 'Caballo'), ('hamster', 'Hamster'), ('pajaro', 'Pájaro'), ('conejo', 'Conejo'), ('pez', 'Pez'), ('reptil', 'Reptil'), ('roedor', 'Roedor'), ('huron', 'Hurón'), ('otro', 'Otro')], max_length=10)),
                ('raza', models.CharField(max_length=50)),
                ('sexo', models.CharField(choices=[('macho', 'Macho'), ('hembra', 'Hembra')], max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='Servicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tiempo', models.DurationField()),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.CharField(choices=[('administrador', 'Administrador'), ('cliente', 'Cliente'), ('medico', 'Medico')], max_length=13)),
                ('nombre', models.CharField(max_length=50)),
                ('apellidos', models.CharField(max_length=50)),
                ('identificacion', models.CharField(max_length=20, unique=True)),
                ('celular', models.CharField(max_length=15)),
                ('correo', models.EmailField(max_length=254, unique=True)),
                ('fecha_nacimiento', models.DateField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='usuario_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='usuario_permissions_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('hora', models.TimeField()),
                ('notas_adicionales', models.TextField(blank=True, null=True)),
                ('mascota', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='reservas.mascota')),
                ('servicios', models.ManyToManyField(related_name='reservas', to='reservas.servicio')),
                ('cliente', models.ForeignKey(limit_choices_to={'rol': 'cliente'}, on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='reservas.usuario')),
            ],
        ),
        migrations.AddField(
            model_name='mascota',
            name='cliente',
            field=models.ForeignKey(limit_choices_to={'rol': 'cliente'}, on_delete=django.db.models.deletion.CASCADE, related_name='mascotas', to='reservas.usuario'),
        ),
        migrations.CreateModel(
            name='HistorialMedico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=100)),
                ('descripcion', models.TextField()),
                ('procedimiento', models.TextField()),
                ('analisis', models.TextField()),
                ('resultado', models.TextField()),
                ('estado_animal', models.TextField()),
                ('mascota', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historiales', to='reservas.mascota')),
                ('servicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historiales', to='reservas.servicio')),
                ('medico', models.ForeignKey(limit_choices_to={'rol': 'medico'}, on_delete=django.db.models.deletion.CASCADE, related_name='historiales', to='reservas.usuario')),
            ],
        ),
    ]
